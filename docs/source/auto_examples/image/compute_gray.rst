
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/image/compute_gray.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_image_compute_gray.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_image_compute_gray.py:


Convert to grayscale
--------------------

This example shows how to use :func:`squidpy.im.process` to convert an image layer to grayscale.

You can convert any layer of :class:`squidpy.im.ImageContainer` to grayscale.
We use the argument ``method = 'gray'`` to convert the image.
This calls :func:`skimage.color.rgb2gray` in the background.

.. seealso::

    - :ref:`sphx_glr_auto_examples_image_compute_smooth.py`
    - :ref:`sphx_glr_auto_examples_image_compute_process_hires.py`

.. GENERATED FROM PYTHON SOURCE LINES 17-22

.. code-block:: default


    import squidpy as sq

    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 23-27

First, we load the H&E stained tissue image.
Here, we only load a cropped dataset to speed things up.
In general, :func:`squidpy.im.process` can also process very large images
(see :ref:`sphx_glr_auto_examples_image_compute_process_hires.py`).

.. GENERATED FROM PYTHON SOURCE LINES 27-29

.. code-block:: default

    img = sq.datasets.visium_hne_image_crop()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      0%|          | 0.00/35.6M [00:00<?, ?B/s]      0%|          | 8.00k/35.6M [00:00<10:16, 60.5kB/s]      0%|          | 56.0k/35.6M [00:00<02:37, 237kB/s]       0%|          | 96.0k/35.6M [00:00<02:20, 266kB/s]      0%|          | 168k/35.6M [00:00<01:39, 374kB/s]       1%|          | 304k/35.6M [00:00<01:01, 607kB/s]      2%|1         | 576k/35.6M [00:00<00:33, 1.09MB/s]      3%|3         | 1.11M/35.6M [00:00<00:17, 2.11MB/s]      6%|6         | 2.20M/35.6M [00:01<00:08, 4.10MB/s]     12%|#2        | 4.38M/35.6M [00:01<00:04, 8.02MB/s]     20%|##        | 7.17M/35.6M [00:01<00:02, 12.1MB/s]     27%|##6       | 9.59M/35.6M [00:01<00:01, 14.1MB/s]     35%|###4      | 12.4M/35.6M [00:01<00:01, 16.4MB/s]     43%|####2     | 15.3M/35.6M [00:01<00:01, 18.0MB/s]     51%|#####     | 18.0M/35.6M [00:01<00:00, 18.9MB/s]     59%|#####8    | 20.9M/35.6M [00:02<00:00, 19.9MB/s]     67%|######6   | 23.7M/35.6M [00:02<00:00, 20.4MB/s]     75%|#######4  | 26.6M/35.6M [00:02<00:00, 21.0MB/s]     83%|########2 | 29.5M/35.6M [00:02<00:00, 21.3MB/s]     91%|#########1| 32.4M/35.6M [00:02<00:00, 21.6MB/s]     99%|#########9| 35.3M/35.6M [00:02<00:00, 21.6MB/s]    100%|##########| 35.6M/35.6M [00:02<00:00, 13.6MB/s]




.. GENERATED FROM PYTHON SOURCE LINES 30-37

Then, we convert the image to grayscale and plot the result.
With the argument ``layer`` we can select the image layer that should be processed.
When converting to grayscale, the channel dimensions change from 3 to 1.
By default, the name of the resulting channel dimension will be ``'{{original_channel_name}}_gray'``.
Use the argument ``channel_dim`` to set a new channel name explicitly.
By default, the resulting image is saved in the layer ``image_gray``.
This behavior can be changed with the arguments ``copy`` and ``layer_added``.

.. GENERATED FROM PYTHON SOURCE LINES 37-44

.. code-block:: default

    sq.im.process(img, layer="image", method="gray")

    fig, axes = plt.subplots(1, 2)
    img.show("image", ax=axes[0])
    _ = axes[0].set_title("original")
    img.show("image_gray", cmap="gray", ax=axes[1])
    _ = axes[1].set_title("grayscale")



.. image-sg:: /auto_examples/image/images/sphx_glr_compute_gray_001.png
   :alt: original, grayscale
   :srcset: /auto_examples/image/images/sphx_glr_compute_gray_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.535 seconds)

**Estimated memory usage:**  637 MB


.. _sphx_glr_download_auto_examples_image_compute_gray.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: compute_gray.py <compute_gray.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: compute_gray.ipynb <compute_gray.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
